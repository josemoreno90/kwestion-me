var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import React from 'react';
import MuiShift from './MuiShift';
import TextField from '@material-ui/core/TextField';
import InputAdornment from '@material-ui/core/InputAdornment';
import IconButton from '@material-ui/core/IconButton';
import ArrowDropDown from '@material-ui/icons/ArrowDropDown';
import ArrowDropUp from '@material-ui/icons/ArrowDropUp';
import Close from '@material-ui/icons/Close';

var renderInput = function renderInput(props) {
  var downshiftProps = props.downshiftProps,
      rootProps = props.rootProps;
  var getInputProps = downshiftProps.getInputProps,
      isOpen = downshiftProps.isOpen,
      selectedItem = downshiftProps.selectedItem,
      openMenu = downshiftProps.openMenu,
      closeMenu = downshiftProps.closeMenu,
      clearSelection = downshiftProps.clearSelection;
  var inputProps = rootProps.inputProps,
      classes = rootProps.classes;

  var isDisabled = inputProps ? inputProps.disabled : undefined;
  var InputProps = getInputProps();

  return React.createElement(TextField, _extends({
    InputProps: _extends({
      onFocus: selectedItem ? undefined : openMenu,
      classes: {
        root: classes.inputRoot
      },
      endAdornment: React.createElement(
        InputAdornment,
        { position: 'end' },
        !!selectedItem && React.createElement(
          IconButton,
          {
            disabled: isDisabled,
            className: classes.closeButton,
            style: { width: 16 },
            onClick: clearSelection,
            tabIndex: -1 },
          React.createElement(Close, { style: { fontSize: 16 } })
        ),
        React.createElement(
          IconButton,
          { disabled: isDisabled, style: { width: 24 }, onClick: isOpen ? closeMenu : openMenu, tabIndex: -1 },
          isOpen ? React.createElement(ArrowDropUp, null) : React.createElement(ArrowDropDown, null)
        )
      )
    }, InputProps)
  }, inputProps));
};

var SelectField = function SelectField(props) {
  return React.createElement(MuiShift, _extends({ renderInput: renderInput }, props));
};

export default SelectField;