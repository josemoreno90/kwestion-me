var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import React from 'react';
import SelectField from './SelectField';
import { List, AutoSizer } from 'react-virtualized';
import Paper from '@material-ui/core/Paper';

var VirtualizedSelectField = function VirtualizedSelectField(props) {

  var renderMenu = function renderMenu(_ref) {
    var rootProps = _ref.rootProps,
        downshiftProps = _ref.downshiftProps,
        filteredItems = _ref.filteredItems;
    var height = props.height,
        rowHeight = props.rowHeight;
    var classes = rootProps.classes,
        renderSuggestion = rootProps.renderSuggestion;
    var highlightedIndex = downshiftProps.highlightedIndex;


    return React.createElement(
      AutoSizer,
      null,
      function (_ref2) {
        var width = _ref2.width;
        return React.createElement(
          Paper,
          { className: classes.paper, style: { width: width }, square: true },
          React.createElement(List, {
            width: width,
            scrollToIndex: highlightedIndex || 0,
            height: height,
            rowCount: filteredItems.length,
            rowHeight: rowHeight,
            rowRenderer: function rowRenderer(_ref3) {
              var key = _ref3.key,
                  index = _ref3.index,
                  style = _ref3.style;
              return React.createElement(
                'div',
                {
                  key: key,
                  style: _extends({}, style)
                },
                renderSuggestion({
                  rootProps: rootProps,
                  downshiftProps: downshiftProps,
                  suggestion: filteredItems[index],
                  index: index
                })
              );
            }
          })
        );
      }
    );
  };

  return React.createElement(SelectField, _extends({ renderMenu: renderMenu }, props));
};

VirtualizedSelectField.defaultProps = {
  height: 200,
  rowHeight: 48
};

export default VirtualizedSelectField;