var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import React from 'react';

export var initialState = {
    deferredPrompt: function deferredPrompt() {},
    isAppInstallable: false,
    isAppInstalled: false
};

export var A2HSContext = React.createContext(initialState);

// This function takes a component...
export function withA2HS(Component) {
    // ...and returns another component...
    return function A2HSComponent(props) {
        // ... and renders the wrapped component with the context theme!
        // Notice that we pass through any additional props as well
        return React.createElement(
            A2HSContext.Consumer,
            null,
            function (context) {
                return React.createElement(Component, _extends({}, props, context));
            }
        );
    };
}

export default A2HSContext;