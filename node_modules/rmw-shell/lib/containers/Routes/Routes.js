'use strict';

exports.__esModule = true;
exports.Routes = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _AppRoutes = require('../../components/AppRoutes');

var _AppRoutes2 = _interopRequireDefault(_AppRoutes);

var _withAppConfigs = require('../../utils/withAppConfigs');

var _withAppConfigs2 = _interopRequireDefault(_withAppConfigs);

var _reactRouterDom = require('react-router-dom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Routes = exports.Routes = function (_Component) {
  _inherits(Routes, _Component);

  function Routes() {
    _classCallCheck(this, Routes);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  Routes.prototype.render = function render() {
    var appConfig = this.props.appConfig;


    var customRoutes = appConfig.routes ? appConfig.routes : [];
    var appRoutes = (0, _AppRoutes2.default)(appConfig.firebaseLoad);
    return _react2.default.createElement(
      'div',
      { style: { width: '100%', height: '100%' } },
      _react2.default.createElement(
        _reactRouterDom.Switch,
        null,
        customRoutes.map(function (Route, i) {
          return _react2.default.cloneElement(Route, { key: '@customRoutes/' + i });
        }),
        appRoutes.map(function (Route, i) {
          return _react2.default.cloneElement(Route, { key: '@appRoutes/' + i });
        })
      )
    );
  };

  return Routes;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)((0, _withAppConfigs2.default)(Routes));