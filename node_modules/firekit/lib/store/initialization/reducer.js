'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = initialization;

var _types = require('../collections/types');

var collectionsTypes = _interopRequireWildcard(_types);

var _types2 = require('../docs/types');

var docsTypes = _interopRequireWildcard(_types2);

var _types3 = require('../lists/types');

var listsTypes = _interopRequireWildcard(_types3);

var _types4 = require('../paths/types');

var pathsTypes = _interopRequireWildcard(_types4);

var _types5 = require('./types');

var types = _interopRequireWildcard(_types5);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function locations() {
  var _extends2;

  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var action = arguments[1];
  var location = action.location,
      locationValue = action.locationValue;

  switch (action.type) {
    case listsTypes.INIIALIZE:
    case collectionsTypes.INIIALIZE:
    case pathsTypes.VALUE_CHANGED:
    case docsTypes.VALUE_CHANGED:
      return _extends({}, state, (_extends2 = {}, _extends2[location] = locationValue, _extends2));
  }
}

function initialization() {
  var _extends3;

  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var action = arguments[1];
  var path = action.path;


  switch (action.type) {
    case listsTypes.INIIALIZE:
    case collectionsTypes.INIIALIZE:
    case pathsTypes.VALUE_CHANGED:
    case docsTypes.VALUE_CHANGED:
      return _extends({}, state, (_extends3 = {}, _extends3[path] = locations(state[path], action), _extends3));

    case types.CLEAR_INITIALIZATION:
      return {};

    case listsTypes.DESTROY:
    case listsTypes.UNWATCH:
    case collectionsTypes.DESTROY:
    case collectionsTypes.UNWATCH:
    case pathsTypes.DESTROY:
    case pathsTypes.UNWATCH:
    case docsTypes.DESTROY:
    case docsTypes.UNWATCH:
      var omit = state[path],
          rest = _objectWithoutProperties(state, [path]);

      return _extends({}, rest);

    default:
      return state;
  }
}
module.exports = exports['default'];